<template>
  <layout title="登录">
    <form @submit="onSubmit">
      <van-cell-group>
        <van-field value="{{ username }}" required clearable label="用户名" placeholder="请输入用户名" bind:click-icon="onClickIcon" />
        <van-field value="{{ password }}" required clearable label="密码" type="password"  placeholder="请输入密码"  border="{{ false }}" />
      </van-cell-group>
      <van-button-group>
        <button form-type="submit" type="primary">登录</button>
        <button form-type="submit" type="primary">注册</button>
      </van-button-group>
    </form>
  </layout>
</template>

<script>
  import wepy from 'wepy'
  import auth from '@/api/auth'
  import base from '@/mixins/base'
  import form from '@/mixins/form'
  import Layout from '@/components/common/layout'
  export default class Login extends wepy.page {
    config = {
      navigationBarTitleText: '',
      enablePullDownRefresh: false,
      usingComponents: {
        'van-button-group': '../../vant/dist/button-group/index',
        'van-cell-group': '../../vant/dist/cell-group/index',
        'van-field': '../../vant/dist/field/index'
      }
    }
    components = {
      'layout': Layout
    }
    mixins = [base, form]
    data = {
      form: {
        username: '',
        password: ''
      }
    }
    computed = {}
    methods = {
      onSubmit(e) {
        this.form = e.detail.value
        if (this.validate()) {
          this.login()
        }
      }
    }
    events = {}
    onLoad() {}
    onPullDownRefresh() {}
    validate() {
      const rules = [{
          value: this.form.username,
          method: 'required',
          message: '请输入用户名'
        },
        {
          value: this.form.password,
          method: 'required',
          message: '请输入密码'
        }
      ]
      return this.checkRules(rules)
    }
    async login() {
      const token = await auth.loginByAuth(this.form)
      if (token) {
        auth.setConfig('token', token)
        this.$switch('/pages/home/home')
      }
    }
  }
</script>

<style lang="less">

</style>
